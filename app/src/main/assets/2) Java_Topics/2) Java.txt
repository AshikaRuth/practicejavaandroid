A) Object class 7 methods :

1) equals()
2) hashCode()
3) wait()
4) notify()
5) notifyAll()
6) finalize()  -- works in case of garbage collection
7) getClass()

B)Which return statement will get execute ?

  try
   {}
  catch(Exception e)
   {
    (1)return;(3)
   }

  finally()
   {
   (2)
    return;
   }

 Ans: Both  :  (1)first execute catch then control execute (2)finally then control go back to (3)catch block again.


C) Class : is a blue print (represents logical entity). Class can be declared only once. Object behaviour depend upon type of class from which it gets instantiated.
   Object : is instance of a class (represents real entity). Object of a class can be created manby times. Object has state and behaviour.


D) Wrapper class : Normally, when we work with Numbers, we use primitive data types such as byte, int, long, double, etc.
However, in development, we come across situations where we need to use objects instead of primitive data types.
In order to achieve this, Java provides wrapper classes.
The object of the wrapper class contains or wraps its respective primitive data type. Converting primitive data
types into object is called boxing, and this is taken care by the compiler. Therefore, while using a wrapper class
you just need to pass the value of the primitive data type to the constructor of the Wrapper class.
And the Wrapper object will be converted back to a primitive data type, and this process is called unboxing.

Example : Output : 15
public class Test {

   public static void main(String args[]) {
      Integer x = 5; // boxes int to an Integer object
      x =  x + 10;   // unboxes the Integer to a int
      System.out.println(x);
   }
}


E) Refer example for Comparable and Comparator.


